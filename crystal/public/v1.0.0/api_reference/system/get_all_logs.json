{
  "title": "Get All Logs",
  "method": "GET",
  "path": "/management/logs",
  "summary": "Retrieve system logs with filtering options",
  "description": "Retrieve system logs with filtering options",
  "operationId": "getAllLogs",
  "tags": ["System"],
  "deprecated": false,
  "parameters": [
    {
      "name": "level",
      "in": "query",
      "description": "Filter by log level",
      "required": false,
      "schema": {
        "type": "string",
        "enum": ["DEBUG", "INFO", "WARN", "ERROR"],
        "example": "INFO"
      }
    },
    {
      "name": "limit",
      "in": "query",
      "description": "Maximum number of log entries to return",
      "required": false,
      "schema": {
        "type": "integer",
        "default": 100,
        "minimum": 1,
        "maximum": 1000,
        "example": 100
      }
    }
  ],
  "responses": {
    "200": {
      "description": "Successful response",
      "content": {
        "application/json": {
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["timestamp", "level", "logger", "message"],
              "properties": {
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Log entry timestamp",
                  "example": "2024-01-15T10:30:00Z"
                },
                "level": {
                  "type": "string",
                  "description": "Log level",
                  "enum": ["DEBUG", "INFO", "WARN", "ERROR"],
                  "example": "INFO"
                },
                "logger": {
                  "type": "string",
                  "description": "Logger name",
                  "example": "com.example.api.gateway"
                },
                "message": {
                  "type": "string",
                  "description": "Log message",
                  "example": "Request processed successfully"
                },
                "component": {
                  "type": "string",
                  "description": "System component that generated the log",
                  "example": "api-gateway"
                }
              }
            }
          }
        }
      }
    },
    "401": {
      "description": "Unauthorized - Authentication required"
    },
    "500": {
      "description": "Internal server error"
    }
  },
  "security": [
    {
      "bearerAuth": []
    },
    {
      "ApiKeyAuth": []
    }
  ],
  "securitySchemas": {
    "bearerAuth": {
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT",
      "description": "JWT Bearer token authentication"
    },
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "X-API-Key",
      "description": "API key for authentication"
    }
  }
}
